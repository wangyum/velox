# Copyright (c) Facebook, Inc. and its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: macOS Build

on:
  push:
    branches:
      - 'CMAKE_POLICY_VERSION_MINIMUM'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.repository }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  macos-build:
    if: ${{ github.repository == 'wangyum/velox' }}
    name: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        # macos-13 = x86_64 Mac
        # macos-14 = arm64 Mac
        # macos-15 = arm64 Mac and cmake 4.0
        os: [macos-13, macos-14, macos-15]
    runs-on: ${{ matrix.os }}
    env:
      CCACHE_DIR: '${{ github.workspace }}/ccache'
      # The arm runners have only 7GB RAM
      BUILD_TYPE: "${{ (matrix.os == 'macos-14' || matrix.os == 'macos-15') && 'Release' || 'Debug' }}"
      INSTALL_PREFIX: "/tmp/deps-install"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Dependencies
        env:
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: "TRUE"
          CMAKE_POLICY_VERSION_MINIMUM: "3.5"
        run: |
          source scripts/setup-macos.sh
          echo "yumwang 1"
          install_build_prerequisites
          echo "yumwang 2"
          install_velox_deps
          echo "yumwang 3"
          // install_double_conversion
          echo "yumwang 3"
          // install_boost
          // install_folly
          echo "yumwang 4"

          echo "NJOBS=`sysctl -n hw.ncpu`" >> $GITHUB_ENV

          if [[ $(sw_vers -productVersion | awk -F '.' '{print $1}') == "15" ]]; then
            # Make sure cmake version is 4
            if [[ $(cmake --version | awk -F '[ .]' 'NR==1 {print $3}') != "4" ]]; then
              echo "CMake version 4 is not allowed."
              exit 1
            fi
          else
            brew unlink protobuf || echo "protobuf not installed"
            brew link --force protobuf@21
            brew uninstall cmake
            pipx install --force cmake==3.31
          fi

      - name: Cache ccache
        uses: assignUser/stash/restore@v1
        with:
          path: '${{ env.CCACHE_DIR }}'
          key: ccache-macos-1-${{ matrix.os }}

      - name: Configure Build
        env:
          folly_SOURCE: BUNDLED #brew folly does not have int128
          fmt_SOURCE: BUNDLED #brew fmt11 is not supported
          CMAKE_POLICY_VERSION_MINIMUM: "3.5"
        run: |
            echo "yumwang 5"
            ccache -sz -M 5Gi
            cmake \
                -B _build/$BUILD_TYPE \
                -GNinja \
                -DTREAT_WARNINGS_AS_ERRORS=1 \
                -DENABLE_ALL_WARNINGS=1 \
                -DVELOX_ENABLE_PARQUET=ON \
                -DVELOX_MONO_LIBRARY=ON \
                -DVELOX_BUILD_SHARED=ON \
                -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        run: |
            cmake --build _build/$BUILD_TYPE -j $NJOBS
            ccache -s

      - uses: assignUser/stash/save@v1
        with:
          path: '${{ env.CCACHE_DIR }}'
          key: ccache-macos-1-${{ matrix.os }}

      - name: Run Tests
        if: false
        run: ctest -j $NJOBS --test-dir _build/debug --output-on-failure
